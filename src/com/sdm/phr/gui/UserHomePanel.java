/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sdm.phr.gui;

import com.sdm.phr.CipherKeyPair;
import com.sdm.phr.DatabaseClient;
import com.sdm.phr.KeyConfig;
import com.sdm.phr.Session;
import com.sdm.phr.WriterH;
import com.sdm.phr.cpabe.AESCoder;
import com.sdm.phr.cpabe.Cpabe;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.bouncycastle.util.encoders.Base64;

/**
 *
 * @author phoenix
 */
public class UserHomePanel extends javax.swing.JPanel {

    Main parent;

    Map<String, Integer> patientMap = null;

    /**
     * Creates new form UserHomePanel
     */
    public UserHomePanel() {
        initComponents();
    }

    public UserHomePanel(Main parent) {
        initComponents();
        this.parent = parent;
    }

    public void update() {
        // update name, organization
        this.jLabelUser.setText(Session.getInstance().getUserName());
        this.jLabelOrgn.setText(Session.getInstance().getOrgnName());

        // add patient list
        this.patientMap = DatabaseClient.getInstance().getPatientMap();
        Vector orgnNameVector = new Vector();
        for (String name : this.patientMap.keySet()) {
            orgnNameVector.add(name);
        }
        final DefaultComboBoxModel model = new DefaultComboBoxModel(orgnNameVector);
        jComboPatient.setModel(model);

        Object[] colNames = {"sid", "pid", "author_id", "policy"};
        Object[][] data = {
            {1, 1, "hello"}
        };
        jTable1.setModel(DatabaseClient.getInstance().retrieveSection());

        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                // do some actions here, for example
                // print first column value from selected row
//                System.out.println(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                if (jTable1.getRowCount() < 1) {
                    return;
                }
//                if (jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString().isEmpty()) {
//                    return;
//                }
                int sid=-1;
                try {
                    sid = (int) (jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                } catch (NullPointerException npe) {
                    System.out.println("no rows found");
                    jDetails.setText("");
                    return;
                }catch(ArrayIndexOutOfBoundsException aiobe){
                    System.out.println("array index bound error");
                    return;
                }
                CipherKeyPair ckp = DatabaseClient.getInstance().getEncryptedRecordPair(sid);
//                System.out.println("aes key:" + ckp.getKey());
//                System.out.println("cipher_text:" + ckp.getCiphertext());

                Cpabe cpabe = new Cpabe();
                try {
//                    System.out.println("private file:" + KeyConfig.getInstance().getUserReadSecretKeyPath());
                    byte[] decKey = cpabe.dec(KeyConfig.getInstance().getPatientReadPublicKeyPath(), KeyConfig.getInstance().getUserReadSecretKeyPath(), ckp.getKeyBinary());
                    byte[] plainMsgBytes = AESCoder.decrypt(decKey, ckp.getCiphertextBinary());
//                    System.out.println("plain msg:" + new String(plainMsgBytes));
                    jDetails.setText(new String(plainMsgBytes));

                } catch (IllegalAccessException ex) {
                    jDetails.setText("cannot decrypt, attributes in key do not satisfy policy");
                }catch(NegativeArraySizeException fnfe){
                    jDetails.setText("cannot read, you don't have read access");
                } catch(java.io.FileNotFoundException fnfe){
                    jDetails.setText("cannot read, you don't have read access");
                } catch (Exception ex) {
                    Logger.getLogger(UserHomePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
//        jTable1.setModel(new DefaultTableModel(data, colNames));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelOrgn = new javax.swing.JLabel();
        jLabelUser = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jDetails = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboPatient = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jAccessPolicy = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jDataRecord = new javax.swing.JTextPane();
        btnAddRecord = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();

        jLabelOrgn.setText("Orgn");

        jLabelUser.setText("[User]");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Pid", "author id", "Access Policy"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel1.setText("All Records");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel2.setText("Details");

        jScrollPane2.setViewportView(jDetails);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("View Records", jPanel1);

        jLabel3.setText("Select Patient");

        jLabel4.setText("Access Policy");

        jLabel5.setText("Data Record");

        jScrollPane3.setViewportView(jDataRecord);

        btnAddRecord.setText("Add this Record");
        btnAddRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboPatient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jAccessPolicy)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 173, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jAccessPolicy)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddRecord)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Records", jPanel2);

        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelOrgn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUser)
                    .addComponent(btnLogout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelOrgn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        Session.getInstance().clean();
        parent.nextPanel(Main.FIRST_SCREEN);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnAddRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecordActionPerformed
        String patient = (String) jComboPatient.getSelectedItem();
        int pid = patientMap.get(patient);
        int authorId = Session.getInstance().getUserId();
        String policy = jAccessPolicy.getText()+" "+pid+" 1of2";
        String record = jDataRecord.getText();

        if (pid < 0 || authorId < 0 || policy.isEmpty() || record.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields are mandatory. Please fill again, and proceed.", "Failure", JOptionPane.ERROR_MESSAGE);
            return;
        }

        WriterH h = new WriterH();
        h.sendSection(record, pid, authorId, policy);

        //clean up
        jAccessPolicy.setText("");
        jDataRecord.setText("");
        
        this.update();

    }//GEN-LAST:event_btnAddRecordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRecord;
    private javax.swing.JButton btnLogout;
    private javax.swing.JTextField jAccessPolicy;
    private javax.swing.JComboBox jComboPatient;
    private javax.swing.JTextPane jDataRecord;
    private javax.swing.JTextPane jDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelOrgn;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
